syntax = "proto3";

option java_multiple_files = true;
option java_package = "gkvs.proto";
option java_outer_classname = "GenericStoreProto";
option objc_class_prefix = "GKV";

package gkvs;

service GenericStore {

    rpc get(KeyOperation) returns (ValueResult) {}

    rpc multiGet(BatchKeyOperation) returns (BatchValueResult) {}

    rpc getAll(stream KeyOperation) returns (stream ValueResult) {}

    rpc scan(ScanOperation) returns (stream ValueResult) {}

    rpc put(PutOperation) returns (StatusResult) {}

    rpc putAll(stream PutOperation) returns (stream StatusResult) {}

    rpc remove(KeyOperation) returns (StatusResult) {}

    rpc removeAll(stream KeyOperation) returns (stream StatusResult) {}

}

message Status {

    enum Code {
         SUCCESS = 0;
         SUCCESS_NOT_UPDATED = 1;  // for compare and put operation that is non-locking algorithm

         ERROR_RES_NOT_FOUND = 10; // not found: database, namespace, table, catalog, etc.
         ERROR_BAD_REQUEST = 11;   // invalid parameters in request
         ERROR_POLICY = 12;        // exists record for operation that requires record and vise versa
         ERROR_MIGRATION = 13;     // data or connections migration occur during operation
         ERROR_NETWORK = 14;       // all connection errors and network availability
         ERROR_AUTH = 15;          // security configuration and authentication
         ERROR_FORBIDDEN = 16;     // authorization
         ERROR_TIMEOUT = 17;       // all SLA errors
         ERROR_OVERLOAD = 18;      // all errors related to high load of operations, full queues and etc.
         ERROR_OVERFLOW = 19;      // all errors related to data space
         ERROR_LOCKED = 20;        // all tries to update data that was in pessimistic lock
         ERROR_ABORTED = 21;       // client aborted stream operation
         ERROR_UNSUPPORTED = 22;   // unsupported commands
         ERROR_DRIVER = 23;        // data access driver specific errors
         ERROR_IO = 24;            // file, serialization, network i/o errors
         ERROR_INTERNAL = 25;      // all unknown errors
    }

    Code code = 1;

    int32 errorCode = 10;
    string errorMessage = 11;
    string errorDetails = 12;   // place for stackTrace for Java

}

message StatusResult {

    Status status = 1;
    int64 sequenceNum = 2;
}

message Metadata {

    int64 version = 1;
}

message Value {

    string column = 1;

    oneof valueRef {
      bytes  value = 2;
      bytes  digest = 3;  // used only in output to check integrity of data
    }

}

message ValueResult {

    Status status  = 1;
    int64 sequenceNum = 2;
    Metadata metadata = 3;
    Key key = 4;
    repeated Value value = 5;

}

message BatchValueResult {

    repeated ValueResult result = 1;

}

message Key {

    string tableName = 1;

    oneof recordRef {
      bytes  key = 2;
      bytes  digest = 3;
    }

}

message Operation {

   int32 timeoutMls = 1;
   fixed64 pit = 2;

}

enum OutputOptions {

    // exclude key
    VALUE = 1;
    METADATA_ONLY = 2;
    VALUE_DIGEST = 3;

    // include key
    KEY_VALUE = 4;
    KEY = 5;
    KEY_VALUE_DIGEST = 6;

}

message Select {

    // select specific columns
    repeated string column = 1;

}

message ScanOperation {

   Operation op = 1;
   string tableName = 2;
   Select select = 3;
   OutputOptions output = 4;

}

message KeyOperation {

   Operation op = 1;
   int64 sequenceNum = 2;
   Key key = 3;
   Select select = 4;
   OutputOptions output = 5;

}

message BatchKeyOperation {

   // gets max timeout for the batch
   repeated KeyOperation operation = 1;

}

message PutOperation {

   Operation op = 1;
   int64 sequenceNum = 2;
   Key key = 3;
   repeated Value value = 4;
   int32 ttlSec = 5;

   bool compareAndPut = 6;
   int64 version = 7;

}
