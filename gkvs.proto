syntax = "proto3";

option java_multiple_files = true;
option java_package = "rocks.gkvs.protos";
option java_outer_classname = "GenericStoreProtos";
option objc_class_prefix = "GKVS";

package gkvs;

service GenericStore {

    rpc list(ListOperation) returns (ListResult) {}

    rpc get(KeyOperation) returns (ValueResult) {}

    rpc multiGet(BatchKeyOperation) returns (BatchValueResult) {}

    rpc getAll(stream KeyOperation) returns (stream ValueResult) {}

    rpc scan(ScanOperation) returns (stream ValueResult) {}

    rpc put(PutOperation) returns (StatusResult) {}

    rpc putAll(stream PutOperation) returns (stream StatusResult) {}

    rpc remove(KeyOperation) returns (StatusResult) {}

    rpc removeAll(stream KeyOperation) returns (stream StatusResult) {}

}

message OperationHeader {

   int64  tag = 1;       // unique id of each call (int64 for Java friendly)
   uint32 timeout = 2;   // server side timeout in milliseconds for SLA
}

message ResultHeader {

   int64  tag = 1;       // unique id of each call (int64 for Java friendly)
   float  elapsed = 2;   // server side operation cost in nanoseconds 
}

enum StatusCode {

     SUCCESS = 0;
     SUCCESS_NOT_UPDATED = 1;  // for compare and put operation that is non-locking algorithm

     ERROR_RESOURCE = 10;      // not found: database, namespace, store, table, cache, catalog, etc.
     ERROR_BAD_REQUEST = 11;   // invalid parameters in request
     ERROR_POLICY = 12;        // exists record for operation that requires record and vise versa
     ERROR_MIGRATION = 13;     // data or connections migration occur during operation
     ERROR_NETWORK = 14;       // all connection errors and network availability
     ERROR_AUTH = 15;          // security configuration and authentication
     ERROR_FORBIDDEN = 16;     // authorization
     ERROR_TIMEOUT = 17;       // all SLA errors
     ERROR_OVERLOAD = 18;      // all errors related to high load of operations, full queues and etc.
     ERROR_OVERFLOW = 19;      // all errors related to data space
     ERROR_LOCKED = 20;        // all tries to update data that was in pessimistic lock
     ERROR_ABORTED = 21;       // client aborted stream operation
     ERROR_END_CQ = 22;        // server aborted stream operation
     ERROR_UNSUPPORTED = 23;   // unsupported commands
     ERROR_DRIVER = 24;        // data access driver specific errors
     ERROR_IO = 25;            // file, serialization, network i/o errors
     ERROR_INTERNAL = 26;      // all unknown errors

}

message Status {

    StatusCode code = 1;

    uint32 errorCode = 10;
    string errorMessage = 11;
    string errorDetails = 12;   // place for stackTrace for Java

}

message StatusResult {

    ResultHeader header = 1;
    Status status = 2;
}

message Metadata {

    repeated uint32 version = 1;    // version of the value
    uint32 ttl = 2;                 // left time to live in seconds
}

message Value {
    bytes raw = 1;
}

message ValueResult {

    ResultHeader header = 1;
    Status status  = 2;
    
    Metadata metadata = 3;
    Key key = 4;
    Value value = 5;

}

message BatchKeyOperation {

   // gets max timeout for the batch
   repeated KeyOperation operation = 1;

}

message BatchValueResult {

    repeated ValueResult result = 1;

}

message Key {

    string viewName = 1;

    // for Aerospike: if recordKey has prefix 'hash!' the rest of the payload is RIPEMD-160 hash (20 bytes)
    bytes recordKey = 2;

}

enum OutputOptions {

    // w/o key
    VALUE = 0;
    METADATA = 1;

    // with key
    KEYVALUE = 10;
    KEY = 11;

}

message Select {

    // select specific columns
    repeated string column = 1;

}

message Function {

    string module = 1;
    string name = 2;
    repeated bytes arg = 3;    
}

message ScanOperation {

   OperationHeader header = 1;
   
   string viewName = 2;
   Select select = 3;
   Function mapper = 4;

   OutputOptions output = 10;

}

enum LookupPolicy {
   EQ = 0;      // equal key
   EQ_LT = 1;   // equal or less than
   EQ_GT = 2;   // equal or greater than
}

message KeyOperation {

   OperationHeader header = 1;

   Key key = 3;
   Select select = 4;
   Function mapper = 5;

   // for hash-based storages only EQ works
   LookupPolicy policy = 6;

   OutputOptions output = 10;

}

enum UpdatePolicy {

    MERGE = 0;
    REPLACE = 1;

}

message PutOperation {

   OperationHeader header = 1;

   Key key = 3;
   Value value = 4;
   Function mapper = 5;
   UpdatePolicy policy = 6;
   
   uint32 ttl = 10;   // time to live in seconds

   bool compareAndPut = 20;
   repeated uint32 version = 21;

}

enum ListType {
   
   VIEWS = 0;
   CLUSTERS = 1;
   TABLES = 2;    // path is required, it is the cluster name

}

message ListOperation {
   
   ListType type = 1;
   string path = 2;   
   
}

message ListEntry {

   string name = 1;
   bytes payload = 2;   // payload is in msgpack

}

message ListResult {

    Status status  = 1;
    repeated ListEntry entry = 2;

}
