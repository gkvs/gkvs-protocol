syntax = "proto3";

option java_multiple_files = true;
option java_package = "gkvs.proto";
option java_outer_classname = "GenericStoreProto";
option objc_class_prefix = "GKV";

package gkvs;

service GenericStore {

    rpc getHead(KeyOperation) returns (HeadResult) {}

    rpc multiGetHead(BatchKeyOperation) returns (stream HeadResult) {}

    rpc get(KeyOperation) returns (RecordResult) {}

    rpc multiGet(BatchKeyOperation) returns (stream RecordResult) {}

    rpc scanHead(ScanOperation) returns (stream HeadResult) {}

    rpc scan(ScanOperation) returns (stream RecordResult) {}

    rpc put(PutOperation) returns (Status) {}

    rpc compareAndPut(PutOperation) returns (Status) {}

    rpc putAll(stream PutOperation) returns (stream Status) {}

    rpc remove(KeyOperation) returns (Status) {}

    rpc removeAll(BatchKeyOperation) returns (Status) {}

}

message Status {

    enum Code {
         SUCCESS = 0;
         TABLE_NOT_FOUND = 1;
         ACCESS_DENY = 2;
         INTERNAL_ERROR = 3;
         CLUSTER_DOWN = 4;
    }

    Code code = 1;
    bool updated = 2;
    int32 errorCode = 3;
    string errorMessage = 4;

}


message Head {

    int64 version = 1;
    repeated string columnKey = 2;

}

message HeadResult {

    Status status = 1;
    Head head = 2;
}

message Record {

    int64 version = 1;
    map<string, bytes> columns = 2;

}

message RecordResult {

    Status status  = 1;
    Record record = 2;
}


message Key {

    string tableName = 1;

    oneof recordRef {
      string  recordKey = 2;
      bytes   recordHash = 3;
    }

    // optional, if not specified then all columns will be retrieved
    repeated string columnKey = 4;

}

message KeyResult {

   Status status  = 1;
   Key key = 2;

}

message Operation {

   int32 timeoutMls = 1;
   fixed64 pit = 2;

}

message ScanOperation {

   Operation op = 1;

}

message KeyOperation {

   Operation op = 1;
   Key key = 2;

}

message PutOperation {

   Operation op = 1;
   Record record = 2;
   int32 ttlSec = 3;
}

message BatchKeyOperation {

   KeyOperation ops = 1;

}
